"dimension","Boost.JSON","Glaze","simdjson","nlohmann/json","notes","evidence_ids"
"Standard Compliance","RFC 8259 compliant; default parser accepts strict UTF-8 JSON and guarantees value round-trip; non-standard comments/trailing commas only via opt-in parse_options.","Strict key compliance: errors on unknown keys by default (opt-out available); C++23-based, tested on GCC/Clang/MSVC; in-memory JSON serialization/deserialization.","Full RFC 8259 compliance with full UTF-8 validation and exact number parsing; rejects NaN/Infinity (non-JSON); single-document size limit 4 GiB.","Defaults to strict JSON: UTF-8 only, no comments or trailing commas; options allow ignoring comments/trailing_commas; objects unordered per spec (ordered_json available).","Defaults: Boost.JSON, simdjson, and nlohmann/json parse strict RFC 8259 JSON; relaxations are opt-in (Boost parse_options; nlohmann ignore_* flags). Glaze errors on unknown keys unless disabled. Deviations/limits: simdjson disallows NaN/Infinity and >4 GiB docs; Boost permits comments/trailing commas only via flags.","EVID-20250808-standard-compliance-boost-001,EVID-20250808-standard-compliance-boost-002,EVID-20250808-standard-compliance-boost-003,EVID-20250808-standard-compliance-boost-004,EVID-20250808-standard-compliance-glaze-001,EVID-20250808-standard-compliance-glaze-002,EVID-20250808-standard-compliance-glaze-003,EVID-20250808-standard-compliance-glaze-004,EVID-20250808-standard-compliance-nlohmann-001,EVID-20250808-standard-compliance-nlohmann-002,EVID-20250808-standard-compliance-nlohmann-003,EVID-20250808-standard-compliance-nlohmann-004,EVID-20250808-standard-compliance-nlohmann-005,EVID-20250808-standard-compliance-simdjson-001,EVID-20250808-standard-compliance-simdjson-002,EVID-20250808-standard-compliance-simdjson-003,EVID-20250808-standard-compliance-simdjson-004,EVID-20250808-standard-compliance-simdjson-005"
"Streaming Support","SAX events via basic_parser; incremental DOM via stream_parser; chunked input, UTF-8 across buffers; incremental serializer; default max_depth=32; partial token events; state reuse/backpressure.","No incremental parsing; contiguous input expected (opt null-terminated); partial_read to skip remainder; strict unknown-key handling; detailed error locations; in-memory direct (de)serialization.","On Demand (not SAX); NDJSON via parse_many/iterate_many document_stream; parser reuse; requires 32B padding; max depth 1024; full UTF-8 validation.","SAX available; no resume/NDJSON by default; DOM exceptions on error, SAX callback errors; ostream output; inputs from istream/iterators; no streaming serializer.","Summaries reflect streaming/incremental parsing and serialization, NDJSON support, limits, and error behaviors.","EVID-20250824-StreamingSupport-BoostJSON-001,EVID-20250824-StreamingSupport-BoostJSON-002,EVID-20250824-StreamingSupport-BoostJSON-003,EVID-20250824-StreamingSupport-BoostJSON-004,EVID-20250824-StreamingSupport-BoostJSON-005,EVID-20250824-StreamingSupport-BoostJSON-006,EVID-20250824-StreamingSupport-BoostJSON-007,EVID-20250824-StreamingSupport-BoostJSON-008,EVID-20250824-StreamingSupport-BoostJSON-009,EVID-20250824-StreamingSupport-BoostJSON-010,EVID-20250824-StreamingSupport-Glaze-001,EVID-20250824-StreamingSupport-Glaze-002,EVID-20250824-StreamingSupport-Glaze-003,EVID-20250824-StreamingSupport-Glaze-004,EVID-20250824-StreamingSupport-Glaze-005,EVID-20250824-StreamingSupport-Glaze-006,EVID-20250824-StreamingSupport-Glaze-007,EVID-20250824-StreamingSupport-simdjson-001,EVID-20250824-StreamingSupport-simdjson-002,EVID-20250824-StreamingSupport-simdjson-003,EVID-20250824-StreamingSupport-simdjson-004,EVID-20250824-StreamingSupport-simdjson-005,EVID-20250824-StreamingSupport-simdjson-006,EVID-20250824-StreamingSupport-nlohmann-001,EVID-20250824-StreamingSupport-nlohmann-002,EVID-20250824-StreamingSupport-nlohmann-003,EVID-20250824-StreamingSupport-nlohmann-004,EVID-20250824-StreamingSupport-nlohmann-005,EVID-20250824-StreamingSupport-nlohmann-006,EVID-20250824-StreamingSupport-nlohmann-007,EVID-20250824-StreamingSupport-nlohmann-008,EVID-20250824-StreamingSupport-nlohmann-009,EVID-20250824-StreamingSupport-nlohmann-010"
"Parse Speed","DOM: 567–1120 MB/s on mixed/escaped corpora; up to 1105 MB/s numeric-only; specialized strings-only case ~6000 MB/s (historical). Monotonic memory resource and parser reuse materially improve throughput.","Microbenchmarks: 1081–1224 MB/s on 670 B JSON (Apple M1, single-thread). In-memory struct parse; results consistent ~1.1–1.2 GB/s across dates/commits.","Single-core DOM up to ~3.0 GB/s on Skylake (paper/blog). On-Demand ~6.8–7.0 GB/s on Sapphire Rapids; NDJSON parse_many ~3.5 GB/s (multi-core).","Typical DOM 55–137 MB/s across varied corpora (github_events, canada, random, twitter).","Hardware/mode-sensitive: simdjson On-Demand vs DOM; Glaze uses tiny custom JSON; Boost results depend on memory resource and dataset (numeric vs escaped vs strings-only). Treat cross-library comparisons with dataset/mode parity.","EVID-20250824-ParseSpeed-Boost-001;EVID-20250824-ParseSpeed-Boost-002;EVID-20250824-ParseSpeed-Boost-003;EVID-20250824-ParseSpeed-Boost-004;EVID-20250824-ParseSpeed-Boost-005;EVID-20250824-ParseSpeed-simdjson-001;EVID-20250824-ParseSpeed-simdjson-002;EVID-20250824-ParseSpeed-simdjson-003;EVID-20250824-ParseSpeed-simdjson-004;EVID-20250824-ParseSpeed-simdjson-005;EVID-20250824-ParseSpeed-simdjson-006;EVID-20250824-ParseSpeed-simdjson-007;EVID-20250824-ParseSpeed-nlohmann-001;EVID-20250824-ParseSpeed-nlohmann-002;EVID-20250824-ParseSpeed-nlohmann-003;EVID-20250824-ParseSpeed-nlohmann-004;EVID-20250824-ParseSpeed-nlohmann-005;EVID-20250824-ParseSpeed-nlohmann-006;EVID-20250824-ParseSpeed-Glaze-001;EVID-20250824-ParseSpeed-Glaze-002;EVID-20250824-ParseSpeed-Glaze-003;EVID-20250824-ParseSpeed-Glaze-004;EVID-20250824-ParseSpeed-Glaze-005;EVID-20250824-ParseSpeed-Glaze-006;EVID-20250824-ParseSpeed-Glaze-007"
