1,Streaming Support,Boost.JSON,Boost.JSON provides an incremental SAX-style parser for JSON. The basic_parser class can parse input in multiple segments and invoke user-defined handler callbacks for each parsing event,,,,Documentation,https://www.boost.org/doc/libs/1_86_0/libs/json/doc/html/json/ref/boost__json__basic_parser.html,Documentation,Boost,2024-08-14,2025-08-23,
2,Streaming Support,Boost.JSON,Boost.JSON also offers an incremental DOM parsing interface. The stream_parser can parse JSON text piecewise from multiple buffers into a value; the caller feeds input chunks via write and finishes the parse to obtain the result,,,,Documentation,https://www.boost.org/doc/libs/1_86_0/libs/json/doc/html/json/ref/boost__json__stream_parser.html,Documentation,Boost,2024-08-14,2025-08-23,
3,Streaming Support,Boost.JSON,The streaming parser accepts input as contiguous character buffers (e.g. std::string data or memory spans). Boost.JSON does not require the entire JSON to be in memory at once; callers can feed data in chunks (from files, network sockets, or other streams) to stream_parser as it becomes available,,,,Documentation,https://www.boost.org/doc/libs/1_86_0/libs/json/doc/html/json/ref/boost__json__stream_parser.html,Documentation,Boost,2024-08-14,2025-08-23,
4,Streaming Support,Boost.JSON,Boost.JSONâ€™s parser handles UTF-8 characters that span multiple input buffers. It buffers incomplete multi-byte sequences and only validates and emits them once the full Unicode code point is assembled. This prevents treating a split sequence as an error,,,,Maintainer Blog,https://cppalliance.org/krystian/2020/09/06/KrystiansAugustUpdate.html,Blog,C++ Alliance,2020-09-06,2025-08-23,
5,Streaming Support,Boost.JSON,Boost.JSON does not directly report error positions in the input. An incremental parsing approach can be used to determine it: by feeding the input through a json::parser (or stream_parser) and checking its return value, one can obtain the number of characters consumed before the error. This allows calculation of the offset where the parse failure occurred,,,,Mailing List,https://listarchives.boost.org/Archives/boost/2022/04/252844.php,Mailing List,Boost,2022-04-25,2025-08-23,
6,Streaming Support,Boost.JSON,Boost.JSON supports streaming (incremental) serialization of JSON. It provides a serializer class that traverses a JSON value and writes out the serialized text in parts, filling user-provided buffers via repeated read calls until completion,,,,Documentation,https://www.boost.org/doc/libs/1_86_0/libs/json/doc/html/json/ref/boost__json__serializer.html,Documentation,Boost,2024-08-14,2025-08-23,
7,Streaming Support,Boost.JSON,The JSON parser imposes a maximum nesting depth of 32 by default (for nested arrays/objects). This limit is configurable via parse_options. If parsing exceeds this depth, an error is returned,max_depth,32,levels,,Documentation,https://www.boost.org/doc/libs/1_89_0_beta1/libs/json/doc/html/ref/parse_options/max_depth.html,Documentation,Boost,2024-08-14,2025-08-23,
8,Streaming Support,Boost.JSON,The incremental SAX parser can deliver JSON values in parts when a token spans multiple buffers. Its handler interface includes callbacks like on_string_part and on_number_part that provide segments of a string or number as they are parsed. Once the token is fully parsed, a final on_string (or numeric value event) is invoked with the complete value,,,,Documentation,https://www.boost.org/doc/libs/1_86_0/libs/json/doc/html/json/ref/boost__json__basic_parser.html,Documentation,Boost,2024-08-14,2025-08-23,
9,Streaming Support,Boost.JSON,Boost.JSON allows reusing parser and serializer state to improve performance. A single parser or stream_parser object can be reset and used for multiple JSON texts. This allows it to reuse its allocated internal storage across parses instead of allocating anew each time. Likewise, the serializer can be reset and reused to avoid re-allocating buffers when serializing multiple values,,,,Documentation,https://www.boost.org/doc/libs/1_86_0/libs/json/doc/html/json/input_output.html,Documentation,Boost,2024-08-14,2025-08-23,
10,Streaming Support,Boost.JSON,The Boost.JSON streaming parser supports chunked incremental parsing; callers feed fixed-size buffers repeatedly rather than loading the entire input at once,,,,Documentation,https://www.boost.org/doc/libs/1_86_0/libs/json/doc/html/json/input_output.html,Documentation,Boost,2024-08-14,2025-08-23,
